name: GitHub Action Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Deploy to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e  # Exit immediately if a command exits with a non-zero status
          
          # Navigate to the build output directory
          cd docs/.vitepress/dist
          
          # Create/overwrite the CNAME file with your custom domain
          echo 'www.hefang.site' > CNAME

          # Initialize a new Git repository
          git init
          git config user.email "he529564582@163.com"
          git config user.name "何方"

          # Add the remote repository
          git remote add origin "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/hefangs/coding.git"

          # Fetch the latest gh-pages branch if it exists
          git fetch origin gh-pages

          # Checkout the gh-pages branch or create an orphan branch if it doesn't exist
          if git rev-parse --verify origin/gh-pages; then
            git checkout gh-pages
            git pull origin gh-pages
          else
            git checkout --orphan gh-pages
          fi

          # Sync the new build files to the gh-pages branch
          rsync -av --delete . ../temp-gh-pages/
          cd ../temp-gh-pages/

          # Add changes and commit only if there are any changes
          git add -A
          if ! git diff --cached --quiet; then
            CURRENT_DATE=$(TZ='Asia/Shanghai' date +"%Y-%m-%d_%H:%M:%S")
            COMMIT_MESSAGE="deploy.yml-$CURRENT_DATE"
            git commit -m "$COMMIT_MESSAGE"

            # Push only the changes to the gh-pages branch
            git push origin gh-pages
          else
            echo "No changes detected, skipping deployment."
          fi